(* ::Package:: *)

(* ::Input:: *)
(*(*Define the values of jj to generate eigenvalue sets*)jjValues={10,20,100,300,500};*)
(*(*jjValues={1000};*)*)
(**)
(*(*Function to compute and save eigenvalue sets*)*)
(*GenerateEigenvalueSet[jj_]:=Module[{eigensols,n,expectedCount,actualCount,filename},(*Compute the expected count using (n+1)(n/2)-1*)expectedCount=(jj+1) (jj/2)-1;*)
(*(*Compute Eigenvalues of Companion Matrices*)eigensols={};*)
(*Do[ak=ConstantArray[0,{n,n}];*)
(*Do[ak[[1,j]]=1,{j,1,n}];*)
(*ak[[2,1]]=1;*)
(*Do[ak[[j+2,j+1]]=1,{j,1,n-2}];*)
(*(*Compute Eigenvalues Numerically WITH HIGH PRECISION*)AppendTo[eigensols,Eigenvalues[N[ak,100]]],{n,2,jj}];*)
(*(*Compute Multiplicative Inverses*)eigensols=1/N[Flatten[eigensols],100];*)
(*(*Convert to {Re,Im} format*)eigensolsFormatted=Table[{Re[eigensols[[j]]],Im[eigensols[[j]]]},{j,1,Length[eigensols]}];*)
(*(*Validate the total number of computed eigenvalues*)actualCount=Length[eigensolsFormatted];*)
(*If[actualCount==expectedCount,Print["\:2705 Successfully generated ",actualCount," eigenvalues for n = ",jj];*)
(*filename="/home/dakini/Downloads/eigenpoints_"<>ToString[jj]<>".wl";*)
(*Export[filename,eigensolsFormatted,"WL"];*)
(*Print["File saved: ",filename];,Print["\:26a0\:fe0f ERROR: Expected ",expectedCount," eigenvalues, but computed ",actualCount,". Check calculations!"];];];*)
(**)
(*(*Generate eigenvalue sets for each jj in jjValues*)*)
(*Do[GenerateEigenvalueSet[jj],{jj,jjValues}];*)
(**)
(*Print["\:2705 All requested eigenvalue sets generated and validated!"];*)
(**)
